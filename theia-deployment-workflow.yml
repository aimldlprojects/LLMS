# This is a basic workflow to help you get started with Actions

name: theia-deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  AWS_REGION: 'us-east-2'                   
  ROLE_ASSUME_ARN: 'arn:aws:iam::913796808694:role/CUSPFE-RAPID-WWS-GITHUBACTION-ROLE-DEV'
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: write    # This is required for actions/checkout



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted, theia-app-new, Linux, X64]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.ROLE_ASSUME_ARN }}
          role-session-name: 'myGitHubActions'
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build, tag, and push UI Docker image
        env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: test_ml_demo
            IMAGE_TAG: ${{ github.sha }}
        run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f /home/ec2-user/actions-runner/gmg-theia/gmg-theia/ui/Dockerfile /home/ec2-user/actions-runner/gmg-theia/gmg-theia/ui
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            echo "App1 Docker image is pushed to $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    
      - name: Build, tag, and push App Docker image
        env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY2: test_ml_demo2
            IMAGE_TAG: ${{ github.sha }}
        run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY2:$IMAGE_TAG -f /home/ec2-user/actions-runner/gmg-theia/gmg-theia/app/Dockerfile /home/ec2-user/actions-runner/gmg-theia/gmg-theia/app
            docker push $ECR_REGISTRY/$ECR_REPOSITORY2:$IMAGE_TAG
            echo "App2 Docker image is pushed to $ECR_REGISTRY/$ECR_REPOSITORY2:$IMAGE_TAG"